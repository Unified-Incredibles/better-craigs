{"version":3,"sources":["account-icon-check.png","components/nav-bar-component/nav-bar.js","components/display-pictures-list-component/display-pictures-list.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","className","for","type","readonly","id","class","Component","DisplayPicturesList","displayData","props","pictureList","map","picture","ind","key","Title","src","Images","alt","displayImages","imageList","console","log","image","index","this","App","state","data","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wu4VAAAA,EAAOC,QAAU,IAA0B,gD,sICGtBC,G,mMAEjB,OA8CE,yBAAKC,UAAU,6BACb,yBAAKA,UAAU,oCACb,6BACE,wBAAIA,UAAU,gDACZ,+CAEF,0BAAMA,UAAU,eACd,yBAAKA,UAAU,mBACb,2BAAOC,IAAI,eAAeD,UAAU,WAApC,YAGA,2BACEE,KAAK,OACLC,UAAQ,EACRH,UAAU,yBACVI,GAAG,kBAIP,yBAAKC,MAAM,cACT,2BAAOJ,IAAI,6BAAX,eACA,4BAAQI,MAAM,eAAeD,GAAG,6BAC9B,iCACA,iCACA,iCACA,iCACA,mCAGJ,yBAAKC,MAAM,cACT,2BAAOJ,IAAI,6BAAX,gBACA,4BAAQI,MAAM,eAAeD,GAAG,6BAC9B,iCACA,iCACA,iCACA,iCACA,mCAGJ,yBAAKC,MAAM,cACT,2BAAOJ,IAAI,6BAAX,YACA,4BAAQI,MAAM,eAAeD,GAAG,6BAC9B,iCACA,iCACA,iCACA,iCACA,mCAGJ,yBAAKC,MAAM,cACT,2BAAOJ,IAAI,6BAAX,aACA,4BAAQI,MAAM,eAAeD,GAAG,6BAC9B,iCACA,iCACA,iCACA,iCACA,mCAGJ,yBAAKC,MAAM,cACT,2BAAOJ,IAAI,6BAAX,WACA,4BAAQI,MAAM,eAAeD,GAAG,6BAC9B,iCACA,iCACA,iCACA,iCACA,mCAGJ,4BAAQF,KAAK,SAASF,UAAU,qBAAhC,sB,GArHsBM,cCAfC,G,iNACjBC,YAAc,WACV,OAAO,EAAKC,MAAMC,YAAYC,KAAI,SAACC,EAAQC,GACvC,OACI,yBAAKC,IAAKD,EAAKb,UAAU,mBACrB,4BAAKY,EAAQG,OACb,6BACA,yBAAKf,UAAU,iBACf,yBAAKA,UAAU,sBACb,yBAAMgB,IAAKJ,EAAQK,OAAO,GAAIC,IAAI,iBAEnC,yBAAKlB,UAAU,qBACd,EAAKmB,cAAcP,EAAQK,gB,EAS7CE,cAAgB,SAACC,GAEb,OADAC,QAAQC,IAAI,UACLF,EAAUT,KAAI,SAACY,EAAMC,GAExB,GADAH,QAAQC,IAAI,SAASC,GACR,IAAVC,EAEC,OACA,6BACG,yBAAKV,IAAKU,GACR,yBAAMR,IAAKO,EAAOL,IAAI,sB,wEAQnC,OACI,yBAAKlB,UAAU,iCACVyB,KAAKjB,mB,GAxC2BF,c,OCyBlCoB,E,YArBb,WAAYjB,GAAO,IAAD,8BAChB,4CAAMA,KACDkB,MAAQ,CACXjB,YAAYkB,GAHE,E,sEAQhB,OACE,6BACE,kBAAC,EAAD,MACA,yBAAK5B,UAAU,QACf,kBAAC,EAAD,CAAqBU,YAAee,KAAKE,MAAMjB,oB,GAbrCmB,IAAMvB,WCMJwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.14fec9f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/account-icon-check.ef20e411.png\";","import React, { Component } from \"react\";\nimport \"./nav-bar.css\";\nimport profileIcon from \"../../account-icon-check.png\";\nexport default class NavBar extends Component {\n  render() {\n    return (\n      //   <div className=\"nav-bar-content\">\n      //     <nav className=\"navbar navbar-expand-lg navbar-light\">\n      //       <a className=\"navbar-brand\" href=\"#\">\n      //         craigslist\n      //       </a>\n      //       <div className=\"nav-middle\"></div>\n      //       <button\n      //         className=\"navbar-toggler\"\n      //         type=\"button\"\n      //         data-toggle=\"collapse\"\n      //         data-target=\"#navbarSupportedContent\"\n      //         aria-controls=\"navbarSupportedContent\"\n      //         aria-expanded=\"false\"\n      //         aria-label=\"Toggle navigation\"\n      //       >\n      //         <span className=\"navbar-toggler-icon\"></span>\n      //       </button>\n\n      //       <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      //         <form className=\"form-inline my-2 my-lg-0\">\n      //           <input\n      //             className=\"form-control mr-sm-2\"\n      //             type=\"search\"\n      //             placeholder=\"Search\"\n      //             aria-label=\"Search\"\n      //           />\n      //           <button\n      //             className=\"btn btn-outline-success my-2 my-sm-0\"\n      //             type=\"submit\"\n      //           >\n      //             Search\n      //           </button>\n      //         </form>\n      //         <button className=\"profile\">\n      //           <img src={profileIcon} />\n      //         </button>\n\n      //         {/*\n      //               <div class=\"dropdown-content\">\n      //                  <a href=\"#\">Link 1</a>\n      //                  <a href=\"#\">Link 2</a>\n      //                  <a href=\"#\">Link 3</a>\n      //              </div> */}\n      //       </div>\n      //     </nav>\n      <div className=\"jumbotron card card-image\">\n        <div className=\"text-white text-center py-5 px-4\">\n          <div>\n            <h1 className=\"card-title h1-responsive pt-3 mb-5 font-bold\">\n              <strong>craigslist</strong>\n            </h1>\n            <form className=\"form-inline\">\n              <div className=\"form-group mb-2\">\n                <label for=\"staticEmail2\" className=\"sr-only\">\n                  LACATION\n                </label>\n                <input\n                  type=\"text\"\n                  readonly\n                  className=\"form-control-plaintext\"\n                  id=\"staticEmail2\"\n                  //   value=\"email@example.com\"\n                />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"exampleFormControlSelect1\">PRICE RANGE</label>\n                <select class=\"form-control\" id=\"exampleFormControlSelect1\">\n                  <option></option>\n                  <option></option>\n                  <option></option>\n                  <option></option>\n                  <option></option>\n                </select>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"exampleFormControlSelect1\">AVAILABILITY</label>\n                <select class=\"form-control\" id=\"exampleFormControlSelect1\">\n                  <option></option>\n                  <option></option>\n                  <option></option>\n                  <option></option>\n                  <option></option>\n                </select>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"exampleFormControlSelect1\">BEDROOMS</label>\n                <select class=\"form-control\" id=\"exampleFormControlSelect1\">\n                  <option></option>\n                  <option></option>\n                  <option></option>\n                  <option></option>\n                  <option></option>\n                </select>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"exampleFormControlSelect1\">BATHROOMS</label>\n                <select class=\"form-control\" id=\"exampleFormControlSelect1\">\n                  <option></option>\n                  <option></option>\n                  <option></option>\n                  <option></option>\n                  <option></option>\n                </select>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"exampleFormControlSelect1\">RATINGS</label>\n                <select class=\"form-control\" id=\"exampleFormControlSelect1\">\n                  <option></option>\n                  <option></option>\n                  <option></option>\n                  <option></option>\n                  <option></option>\n                </select>\n              </div>\n              <button type=\"submit\" className=\"btn btn-dark mb-2\">\n                Search Now\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n      //   </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './display-pictures-list.css';\n\nexport default class DisplayPicturesList extends Component {\n    displayData = () => {\n        return this.props.pictureList.map((picture,ind) => {\n            return (\n                <div key={ind} className=\"picture-content\">\n                    <h3>{picture.Title}</h3>\n                    <div >\n                    <div className=\"image-display\">\n                    <div className=\"carousal-self-item\">\n                      <img  src={picture.Images[0]} alt=\"First slide\" />\n                    </div>\n                     <div className=\"horizontal-images\">\n                     {this.displayImages(picture.Images)}\n                      </div>\n                    </div>\n                \n</div>\n                </div>\n            )\n        })\n    }\n    displayImages = (imageList) => {\n        console.log(\"images\")\n        return imageList.map((image,index) =>{\n            console.log(\"images\"+image)\n            if(index !== 0){\n            \n                return (\n                <div>\n                   <div key={index} >\n                     <img  src={image} alt=\"First slide\" />\n                   </div>\n                </div>\n                 )\n            }\n        })\n    }\n    render() {\n        return (\n            <div className=\"display-pictures-list-content\">\n                {this.displayData()}\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport NavBar from './components/nav-bar-component/nav-bar';\nimport DisplayPicturesList from './components/display-pictures-list-component/display-pictures-list';\nimport data from './data.json';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      pictureList:data\n    }\n   \n  }\n  render() {\n    return (\n      <div >\n        <NavBar />\n        <div className=\"some\">\n        <DisplayPicturesList pictureList = {this.state.pictureList}/>\n        </div>\n        \n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}